@page "/"
@using DLMSReader_Multiplatform.Shared.Components.Models
@using DLMSReader_Multiplatform.Shared.Components.ViewModels
@using Gurux.DLMS.Enums
@inject DeviceDataViewModel ViewModel
@inject NavigationManager Nav



<div class="layout-container">

    <!-- Levý panel -->
    <div class="sidebar">

        <!-- Horní lišta s tlačítky -->
        <div class="sidebar-controls">
            <button @onclick="NavigateToAddPage">Add</button>
            <button @onclick="OnRemoveClicked">Remove</button>
        </div>

        <!-- Scrollovatelný seznam -->
        <div class="device-list-container">
            <h4>Devices</h4>
            @if (ViewModel.AllDevices.Count == 0)
            {
                <p><em>There is no added device. Please add new device before continue.</em></p>
            }
            else
            {
                <ul class="device-list">
                    @foreach (var device in ViewModel.AllDevices)
                    {
                        <li @onclick="() => SelectDevice(device)"
                            class="@(ViewModel.SelectedDevice == device ? "selected" : "")">
                            <strong>@device.Name</strong><br />
                            <small>@device.CollectionViewDetailString</small>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>

    <!-- Pravý panel -->
    <div class="detail-panel">
        @if (ViewModel.SelectedDevice != null)
        {
            <div class="device-details">
                <h4>Selected device</h4>
                @switch (ViewModel.SelectedDevice.InterfaceType)
                {
                    case InterfaceType.WRAPPER:
                        {
                            <p><strong>Name:</strong> @ViewModel.SelectedDevice.Name</p>
                            <p><strong>Interface type:</strong> @ViewModel.SelectedDevice.InterfaceType</p>
                            <p><strong>Server Address:</strong> @ViewModel.SelectedDevice.ServerAddress</p>
                            <p><strong>Port:</strong> @ViewModel.SelectedDevice.Port</p>
                            <p><strong>Logical Name Referencing:</strong> @ViewModel.SelectedDevice.LogicalNameReferencing</p>
                            break;
                        }
                    case InterfaceType.HdlcWithModeE:
                    case InterfaceType.HDLC:
                        {
                            <p><strong>Name:</strong> @ViewModel.SelectedDevice.Name</p>
                            <p><strong>Interface type:</strong> @ViewModel.SelectedDevice.InterfaceType</p>
                            <p><strong>COM Port:</strong> @ViewModel.SelectedDevice.SerialPort</p>
                            <p><strong>Baud Rate:</strong> @ViewModel.SelectedDevice.BaudRate</p>
                            <p><strong>Data bits:</strong> @ViewModel.SelectedDevice.DataBits</p>
                            <p><strong>Stop bits:</strong> @ViewModel.SelectedDevice.StopBits</p>
                            <p><strong>Parity:</strong> @ViewModel.SelectedDevice.Parity</p>
                            <p><strong>Logical Name Referencing:</strong> @ViewModel.SelectedDevice.LogicalNameReferencing</p>
                            break;
                        }
                    default:
                        {
                            <p><strong>Name:</strong> @ViewModel.SelectedDevice.Name</p>
                            <p><strong>Interface type:</strong> @ViewModel.SelectedDevice.InterfaceType</p>
                            break;
                        }
                }

                <div class="connect-button-container">
                    <button @onclick="NavigateToConnectPage">Connect</button>
                </div>
            </div>
        }
        else
        {
            <p><em>Choose device from the list.</em></p>
        }
    </div>
</div>

@code {
    private void SelectDevice(DLMSDeviceModel device)
    {
        ViewModel.SelectedDevice = device;
        StateHasChanged();
    }

    private void NavigateToConnectPage()
    {
        if (ViewModel.SelectedDevice != null)
            Nav.NavigateTo($"/connect-device/{ViewModel.SelectedDevice.Name}");
    }

    private void NavigateToAddPage() => Nav.NavigateTo("/add-device");

    private void OnRemoveClicked() => ViewModel.RemoveSelectedDevice();

    protected override void OnInitialized()
    {
        // if (ViewModel.AllDevices.Count == 0)
        // {
        //     ViewModel.AddDevice(new DLMSDeviceModel("Basic device", "127.0.0.1", 4059, InterfaceType.WRAPPER, true, 1, 1, 1));
        //     ViewModel.AddDevice(new DLMSDeviceModel("Android device", "10.0.2.2", 4059, InterfaceType.WRAPPER, true, 1, 1, 1));
        //     ViewModel.AddDevice(new DLMSDeviceModel("Basic device 2", "123.123.123.123", 4059, InterfaceType.WRAPPER, true, 1, 1, 1));
        // }
    }
}



<style>
    .layout-container {
        display: flex;
        height: 100vh;
        overflow: hidden;
    }

    /* Levý panel */
    .sidebar {
        width: 200px;
        min-width: 200px;
        max-width: 200px;
        background-color: #f9f9f9;
        border-right: 1px solid #ccc;
        display: flex;
        flex-direction: column;
    }

        .sidebar h4 {
            font-size: 18px;
            margin-top: 0;
            margin-bottom: 10px;
        }

    /* Tlačítka nahoře */
    .sidebar-controls {
        padding: 10px;
        border-bottom: 1px solid #ccc;
        flex-shrink: 0;
    }

        .sidebar-controls button {
            width: 100%;
            margin-bottom: 5px;
            padding: 8px;
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
        }

            .sidebar-controls button:first-child {
                background-color: mediumseagreen;
            }

            .sidebar-controls button:last-child {
                background-color: firebrick;
            }

    /* Scrollovatelný seznam */
    .device-list-container {
        padding: 10px;
        overflow-y: auto;
        flex-grow: 1;
    }

    .device-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

        .device-list li {
            padding: 10px;
            border: 1px solid #ccc;
            margin-bottom: 5px;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.2s ease;
            white-space: normal;
            word-wrap: break-word;
            overflow-wrap: anywhere;
        }

            .device-list li:hover {
                background-color: #f1f1f1;
            }

            .device-list li.selected {
                background-color: #d0ebff;
                border-color: #74c0fc;
            }

    /* Pravý panel */
    .detail-panel {
        flex-grow: 1;
        min-width: 0;
        padding: 0 20px 20px 20px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
    }

    .device-details {
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .detail-panel p,
    .detail-panel strong {
        word-wrap: break-word;
        overflow-wrap: anywhere;
    }

    .detail-panel h4 {
        font-size: 18px;
        margin-top: 20px;
        margin-bottom: 10px;
    }

    .connect-button-container {
        margin-top: auto;
        padding-top: 20px;
    }

        .connect-button-container button {
            background-color: dodgerblue;
            color: white;
            border: none;
            padding: 10px 15px;
            border-radius: 6px;
            cursor: pointer;
        }

</style>
