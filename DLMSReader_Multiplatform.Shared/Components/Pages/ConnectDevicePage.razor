@page "/connect-device/{DeviceName}"
@using DLMSReader_Multiplatform.Shared.Components.Models
@using DLMSReader_Multiplatform.Shared.Components.ViewModels
@using DLMSReader_Multiplatform.Shared.Components.Data
@using Gurux.DLMS.Objects
@inject DeviceDataViewModel ViewModel
@inject DeviceDatabaseService DbService
@inject NavigationManager Nav

<div class="connect-layout">
    <div class="panels">
        <!-- Levý panel -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <button class="btn-load" @onclick="ReadAllObjects">Read objects</button>
                <button class="btn-back" @onclick="@(() => Nav.NavigateTo("/"))">Back</button>
                <h5 class="sidebar-title">Objekty</h5>
            </div>

            <div class="sidebar-body">
                @if (connectionVM?.Device.DeviceObjects?.Count == 0)
                {
                    <p><em>There are no objects to display.</em></p>
                    <p><em>Please read objects first.</em></p>
                }
                else
                {
                    <ul class="device-list">
                        @foreach (var obj in connectionVM.Device.DeviceObjects)
                        {
                            <li @onclick="() => SelectObject(obj)"
                                class="@(connectionVM.SelectedObject == obj ? "selected" : "")">
                                <strong>@obj.LogicalName</strong><br />
                                <small>@obj.Description</small>
                            </li>
                        }
                    </ul>
                }
            </div>
        </aside>

        <!-- Pravý panel -->
        <section class="detail-panel">
            @if (connectionVM?.Device.InterfaceType == Gurux.DLMS.Enums.InterfaceType.WRAPPER)
            {
                <h4>@($"{connectionVM.Device.Name} | {connectionVM.Device.InterfaceType} | {connectionVM.Device.ServerAddress}:{connectionVM.Device.Port}")</h4>
            }

            @if (connectionVM?.SelectedObject != null)
            {
                <pre class="object-details">@connectionVM.ObjectDetailsString</pre>
            }
            else
            {
                <p><em>Choose an object from the list.</em></p>
            }
        </section>
    </div>
</div>

<style>
    .connect-layout {
        height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .panels {
        flex: 1;
        display: flex;
        overflow: hidden;
    }

    .sidebar {
        width: 200px;
        min-width: 200px;
        max-width: 200px;
        background: #f9f9f9;
        border-right: 1px solid #ccc;
        display: flex;
        flex-direction: column;
    }

    .sidebar-header {
        padding: 10px;
        border-bottom: 1px solid #ccc;
        flex-shrink: 0;
    }

    .btn-load,
    .btn-back {
        width: 100%;
        padding: 8px;
        border: none;
        border-radius: 5px;
        color: #fff;
        font-weight: bold;
        cursor: pointer;
    }

    .btn-load {
        background: mediumseagreen;
        margin-bottom: 5px;
    }

    .btn-back {
        background: firebrick;
    }

    .sidebar-title {
        margin: 8px 0 0;
        font-size: 1rem;
        font-weight: normal;
    }

    .sidebar-body {
        padding: 10px;
        overflow-y: auto;
        flex-grow: 1;
    }

    .device-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }

        .device-list li {
            padding: 10px;
            border: 1px solid #ccc;
            margin-bottom: 5px;
            border-radius: 6px;
            cursor: pointer;
            transition: background 0.2s ease;
            word-wrap: break-word;
            overflow-wrap: anywhere;
        }

            .device-list li:hover {
                background: #f1f1f1;
            }

            .device-list li.selected {
                background: #d0ebff;
                border-color: #74c0fc;
            }

    .detail-panel {
        flex-grow: 1;
        padding: 20px;
        overflow-y: auto;
        min-width: 0;
    }

        .detail-panel h4 {
            margin-top: 0;
            margin-bottom: 1rem;
        }

    .object-details {
        background: #f5f5f5;
        padding: 10px;
        border-radius: 5px;
        overflow-x: auto;
    }
</style>

@code {
    [Parameter] public string DeviceName { get; set; } = "";

    private DeviceConnectionViewModel? connectionVM;

    protected override void OnInitialized()
    {
        var device = ViewModel.AllDevices.FirstOrDefault(d => d.Name == DeviceName);
        if (device != null)
        {
            connectionVM = new DeviceConnectionViewModel(device, DbService);
        }
        else
        {
            Nav.NavigateTo("/");
        }
    }

    private async Task ReadAllObjects()
    {
        if (connectionVM != null)
        {
            await connectionVM.ConnectToDeviceAsync();
            StateHasChanged();
        }
    }

    private void SelectObject(GXDLMSObject obj)
    {
        if (connectionVM != null)
        {
            connectionVM.SelectedObject = obj;
            connectionVM.GetSelectedObjectText();
        }
    }
}
